#!/bin/sh -e

cdgopath() {
    mkdir -p "$GOPATH/src/${2%/*}"
    rm -f "$GOPATH/src/$2"
    ln -s "$PWD/$1" "$GOPATH/src/$2"
    cd "$GOPATH/src/$2"
}

out() { printf '\033[1;33m-> \033[m%s\n' "$@" ;}

export GOPATH=$PWD
export PATH=$GOPATH/bin:$PATH
trap "go clean -modcache" EXIT INT

sed -i "/GitCommit/s/\".*\"/\"v$2\"/;
        /Version/s/\".*\"/\"$2\"/;
        /BuildTime/s/\".*\"/\"$(date -u "+%Y-%m-%d %H:%M:%S")\"/" \
            docker-ce/components/engine/dockerversion/version_lib.go \
            docker-ce/components/cli/cli/version/version.go

(
out "Building cli"

cdgopath docker-ce/components/cli github.com/docker/cli
DISABLE_WARN_OUTSIDE_CONTAINER=1 make VERSION=$2-ce
)

(
out "Building app cli plugin"

cdgopath app github.com/docker/app
make bin/docker-app
)

(
out "Building daemon"

cdgopath docker-ce/components/engine github.com/docker/docker
DOCKER_GITCOMMIT=$2 DOCKER_BUILDTAGS='seccomp' VERSION=$2-ce hack/make.sh binary
)


(
out "Building docker-proxy"

cdgopath libnetwork github.com/docker/libnetwork
CGO_ENABLED=0 go build -ldflags='-linkmode=external' github.com/docker/libnetwork/cmd/proxy
)

(
out "Building docker-init"

cdgopath tini github.com/krallin/tini

export DESTDIR=$1

cmake -B build \
    -DCMAKE_INSTALL_PREFIX=/usr

cmake --build   build
install -Dm755 build/tini-static "$1/usr/bin/docker-init"
)

install -Dm755 libnetwork/proxy "$1/usr/bin/docker-proxy"

(
cd docker-ce/components/engine
install -Dm755 bundles/binary-daemon/dockerd              "$1/usr/bin/dockerd"
install -Dm644 contrib/syntax/vim/syntax/dockerfile.vim   "$1/usr/share/vim/vimfiles/syntax/dockerfile.vim"
install -Dm644 contrib/syntax/vim/ftdetect/dockerfile.vim "$1/usr/share/vim/vimfiles/ftdetect/dockerfile.vim"

)

(
cd docker-ce/components/cli

install -Dm755 build/docker                         "$1/usr/bin/docker"
install -Dm644 contrib/completion/bash/docker       "$1/usr/share/bash-completion/completions/docker"
install -Dm644 contrib/completion/zsh/_docker       "$1/usr/share/zsh/site-functions/_docker"
install -Dm644 contrib/completion/fish/docker.fish  "$1/usr/share/fish/vendor_completions.d/docker.fish"
)

install -Dm755 run                "$1/etc/sysmgr/docker"
install -Dm755 run                "$1/etc/runit/docker/run"
ln -s /run/runit/supervise.docker "$1/etc/runit/docker/supervise"
